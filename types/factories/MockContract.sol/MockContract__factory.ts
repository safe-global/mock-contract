/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  MockContract,
  MockContractInterface,
} from "../../MockContract.sol/MockContract";
import type { NonPayableOverrides } from "../../common";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "_allowCallViaMock",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_allowDelegatecallViaMock",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DEFAULT_FALLBACK_VALUE",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MOCKS_LIST_END",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MOCKS_LIST_END_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MOCKS_LIST_START",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SENTINEL_ANY_MOCKS",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allowCallViaMock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allowDelegatecallViaMock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "executeCallViaMock",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "executeDelegatecallViaMock",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "givenAnyReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "response",
        type: "address",
      },
    ],
    name: "givenAnyReturnAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "response",
        type: "bool",
      },
    ],
    name: "givenAnyReturnBool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "response",
        type: "uint256",
      },
    ],
    name: "givenAnyReturnUint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "givenAnyRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "givenAnyRevertWithMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "givenAnyRunOutOfGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "givenCalldataReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "response",
        type: "address",
      },
    ],
    name: "givenCalldataReturnAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "response",
        type: "bool",
      },
    ],
    name: "givenCalldataReturnBool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "response",
        type: "bytes32",
      },
    ],
    name: "givenCalldataReturnBytes32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "response",
        type: "uint256",
      },
    ],
    name: "givenCalldataReturnUint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "givenCalldataRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "givenCalldataRevertWithMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "givenCalldataRunOutOfGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "givenMethodReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "response",
        type: "address",
      },
    ],
    name: "givenMethodReturnAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "response",
        type: "bool",
      },
    ],
    name: "givenMethodReturnBool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "response",
        type: "bytes32",
      },
    ],
    name: "givenMethodReturnBytes32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "response",
        type: "uint256",
      },
    ],
    name: "givenMethodReturnUint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "givenMethodRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "givenMethodRevertWithMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "givenMethodRunOutOfGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "invocationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "invocationCountForCalldata",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "invocationCountForMethod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "methodId",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "originalMsgData",
        type: "bytes",
      },
    ],
    name: "updateInvocationCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x5f60e052602060c0908152610100604052600b906200001f908262000197565b503480156200002c575f80fd5b5060405162003298380380620032988339810160408190526200004f9162000274565b604080518082019091526004815263183c333360e11b602080830191909152600160f81b5f90815290527f82ac279db26a206d9ba5a94c07ff940aea4b3bfde8820ec95f4efa0acfd0d5bc90620000a7908262000197565b50600160f81b5f5260056020527fde001afd1f75281f9d2ab22d4e0166be5a51dd890d7492e8fbf3e412e05eac0a805463ffffffff19166301000000179055901515608052151560a052620002aa565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200012057607f821691505b6020821081036200013f57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000192575f81815260208120601f850160051c810160208610156200016d5750805b601f850160051c820191505b818110156200018e5782815560010162000179565b5050505b505050565b81516001600160401b03811115620001b357620001b3620000f7565b620001cb81620001c484546200010b565b8462000145565b602080601f83116001811462000201575f8415620001e95750858301515b5f19600386901b1c1916600185901b1785556200018e565b5f85815260208120601f198616915b82811015620002315788860151825594840194600190910190840162000210565b50858210156200024f57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b805180151581146200026f575f80fd5b919050565b5f806040838503121562000286575f80fd5b62000291836200025f565b9150620002a1602084016200025f565b90509250929050565b60805160a051612fbe620002da5f395f81816106ae015261144601525f818161062d01526113610152612fbe5ff3fe60806040526004361061026d575f3560e01c806387abab6511610152578063c6ee167f116100ca578063e211b8a51161007e578063f07da22911610063578063f07da22914610793578063f5afa9c1146107f7578063fa904ee0146108165761027c565b8063e211b8a514610760578063eb861f69146107745761027c565b8063d6fe9778116100af578063d6fe97781461070e578063d73ca0ac1461072d578063d826f88f1461074c5761027c565b8063c6ee167f146106d0578063cf11ff5d146106ef5761027c565b8063aa788c5511610121578063af21ac7811610106578063af21ac781461065f578063b3901f291461067e578063ba7296f41461069d5761027c565b8063aa788c55146105fd578063aaf58d691461061c5761027c565b806387abab65146105815780638bc80f45146105a05780639a1dc86b146105bf5780639eaeed75146105de5761027c565b806358cbc025116101e5578063682b4797116101b45780636f400756116101995780636f400756146104ed5780637cd96ee41461050c5780637dd15363146105545761027c565b8063682b4797146104af57806368ab6f2f146104ce5761027c565b806358cbc0251461041f5780635a3855ab1461043e578063619365941461045d57806367aad04a1461047c5761027c565b80632ed238dc1161023c5780633956dc6b116102215780633956dc6b146103a55780634937c4f6146103e1578063586984a4146104005761027c565b80632ed238dc1461031e57806336ff0ee5146103865761027c565b80630a20119f146102845780630f91beea146102a7578063122aea81146102c657806321fed4d6146102ff5761027c565b3661027c5761027a610835565b005b61027a610835565b34801561028f575f80fd5b50600d545b6040519081526020015b60405180910390f35b3480156102b2575f80fd5b5061027a6102c1366004612478565b610dbd565b3480156102d1575f80fd5b506102f2604080515f60208201520160405160208183030381529060405281565b60405161029e919061252b565b34801561030a575f80fd5b5061027a610319366004612544565b610e21565b348015610329575f80fd5b5060408051808201909152600481527f30786666000000000000000000000000000000000000000000000000000000006020909101526102947f420daffad4b177bce28bead5f76f7bc97ef63c3aae74c496db8ce6aafe9e651381565b348015610391575f80fd5b5061027a6103a0366004612597565b610ec3565b3480156103b0575f80fd5b5061027a600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166002179055565b3480156103ec575f80fd5b506102946103fb366004612544565b610ee8565b34801561040b575f80fd5b5061029461041a366004612544565b610f9b565b34801561042a575f80fd5b5061027a610439366004612684565b610fe2565b348015610449575f80fd5b5061027a6104583660046126f5565b61115b565b348015610468575f80fd5b5061027a610477366004612745565b6111be565b348015610487575f80fd5b506102947f010000000000000000000000000000000000000000000000000000000000000081565b3480156104ba575f80fd5b5061027a6104c93660046127cd565b61122f565b3480156104d9575f80fd5b5061027a6104e8366004612544565b611254565b3480156104f8575f80fd5b5061027a6105073660046126f5565b6112ff565b348015610517575f80fd5b506102f26040518060400160405280600481526020017f307866660000000000000000000000000000000000000000000000000000000081525081565b34801561055f575f80fd5b5061057361056e3660046127e8565b61135c565b60405161029e929190612845565b34801561058c575f80fd5b5061027a61059b366004612544565b611409565b3480156105ab575f80fd5b506105736105ba366004612867565b611441565b3480156105ca575f80fd5b5061027a6105d9366004612745565b6114e9565b3480156105e9575f80fd5b5061027a6105f8366004612745565b6115aa565b348015610608575f80fd5b5061027a610617366004612544565b611677565b348015610627575f80fd5b5061064f7f000000000000000000000000000000000000000000000000000000000000000081565b604051901515815260200161029e565b34801561066a575f80fd5b5061027a6106793660046128bc565b611717565b348015610689575f80fd5b5061027a6106983660046128d3565b611723565b3480156106a8575f80fd5b5061064f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106db575f80fd5b5061027a6106ea366004612745565b61177b565b3480156106fa575f80fd5b5061027a6107093660046128d3565b6117ec565b348015610719575f80fd5b5061027a610728366004612544565b611844565b348015610738575f80fd5b5061027a610747366004612478565b611882565b348015610757575f80fd5b5061027a6118c6565b34801561076b575f80fd5b5061027a611ed0565b34801561077f575f80fd5b5061027a61078e366004612544565b611f16565b34801561079e575f80fd5b506107c67f010000000000000000000000000000000000000000000000000000000000000081565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161029e565b348015610802575f80fd5b5061027a610811366004612478565b611fef565b348015610821575f80fd5b5061027a610830366004612478565b612033565b7fffffffff000000000000000000000000000000000000000000000000000000005f35166001805f3660405161086c929190612953565b9081526040519081900360200190205460ff16600281111561089057610890612926565b036108ee5760035f366040516108a7929190612953565b9081526040519081900360200181207f08c379a00000000000000000000000000000000000000000000000000000000082526108e5916004016129b3565b60405180910390fd5b600260015f36604051610902929190612953565b9081526040519081900360200190205460ff16600281111561092657610926612926565b0361093357610933612092565b5f60025f36604051610946929190612953565b9081526020016040518091039020805461095f90612962565b80601f016020809104026020016040519081016040528092919081815260200182805461098b90612962565b80156109d65780601f106109ad576101008083540402835291602001916109d6565b820191905f5260205f20905b8154815290600101906020018083116109b957829003601f168201915b5050505050905080515f03610ba35760017fffffffff0000000000000000000000000000000000000000000000000000000083165f9081526006602052604090205460ff166002811115610a2c57610a2c612926565b03610a95577fffffffff0000000000000000000000000000000000000000000000000000000082165f908152600860205260409081902090517f08c379a00000000000000000000000000000000000000000000000000000000081526108e591906004016129b3565b60027fffffffff0000000000000000000000000000000000000000000000000000000083165f9081526006602052604090205460ff166002811115610adc57610adc612926565b03610ae957610ae9612092565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f9081526007602052604090208054610b2490612962565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5090612962565b8015610b9b5780601f10610b7257610100808354040283529160200191610b9b565b820191905f5260205f20905b815481529060010190602001808311610b7e57829003601f168201915b505050505090505b80515f03610cb0576001600a5460ff166002811115610bc457610bc4612926565b03610bfe57600c6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e591906129b3565b6002600a5460ff166002811115610c1757610c17612926565b03610c2457610c24612092565b600b8054610c3190612962565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5d90612962565b8015610ca85780601f10610c7f57610100808354040283529160200191610ca8565b820191905f5260205f20905b815481529060010190602001808311610c8b57829003601f168201915b505050505090505b5f3073ffffffffffffffffffffffffffffffffffffffff16620186a0845f36604051602401610ce193929190612a56565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f58cbc0250000000000000000000000000000000000000000000000000000000017905251610d629190612acb565b5f604051808303815f8787f1925050503d805f8114610d9c576040519150601f19603f3d011682016040523d82523d5f602084013e610da1565b606091505b5091505080515f14610db557610db5612ae6565b815182602001f35b610e1c83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250506040805160208101879052019150610e089050565b6040516020818303038152906040526120ab565b505050565b600260018383604051610e35929190612953565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836002811115610e7c57610e7c612926565b0217905550610ebf82828080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061213992505050565b5050565b5f81610ecf575f610ed2565b60015b60ff169050610ebf610ee3826121ef565b612219565b5f80610f2884848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061224d92505050565b905060095f600e5483604051602001610f6d9291909182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6040516020818303038152906040528051906020012081526020019081526020015f20549150505b92915050565b5f60045f600e548585604051602001610fb693929190612b13565b6040516020818303038152906040528051906020012081526020019081526020015f2054905092915050565b333014611071576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f43616e206f6e6c792062652063616c6c65642066726f6d2074686520636f6e7460448201527f7261637420697473656c6600000000000000000000000000000000000000000060648201526084016108e5565b6001600d5f8282546110839190612b59565b92505081905550600160095f600e54856040516020016110cf9291909182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6040516020818303038152906040528051906020012081526020019081526020015f205f8282546111009190612b59565b92505081905550600160045f600e5484604051602001611121929190612b6c565b6040516020818303038152906040528051906020012081526020019081526020015f205f8282546111529190612b59565b90915550505050565b5f81611167575f61116a565b60015b60ff1690506111b884848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111b392508591506121ef9050565b6120ab565b50505050565b6111b884848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f880181900481028201810190925286815292508691508590819084018382808284375f920191909152506120ab92505050565b611251610ee38273ffffffffffffffffffffffffffffffffffffffff166121ef565b50565b5f61129383838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061224d92505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f90815260066020526040902080549192506002917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001835b0217905550610e1c816122be565b5f8161130b575f61130e565b60015b60ff1690506111b884848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061135792508591506121ef9050565b6123b2565b5f60607f0000000000000000000000000000000000000000000000000000000000000000156113f8578573ffffffffffffffffffffffffffffffffffffffff16858490866040516113ad9190612acb565b5f60405180830381858888f193505050503d805f81146113e8576040519150601f19603f3d011682016040523d82523d5f602084013e6113ed565b606091505b509092509050611400565b611400610835565b94509492505050565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600c610e1c828483612bde565b5f60607f0000000000000000000000000000000000000000000000000000000000000000156114d9578473ffffffffffffffffffffffffffffffffffffffff1683856040516114909190612acb565b5f604051808303818686f4925050503d805f81146114c9576040519150601f19603f3d011682016040523d82523d5f602084013e6114ce565b606091505b5090925090506114e1565b6114e1610835565b935093915050565b5f61152885858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061224d92505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f90815260066020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560089091529020909150611599838583612bde565b506115a3816122be565b5050505050565b60018085856040516115bd929190612953565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600281111561160457611604612926565b021790555081816003868660405161161d929190612953565b90815260200160405180910390209182611638929190612bde565b506111b884848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061213992505050565b5f6116b683838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061224d92505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f90815260066020526040902080549192506001917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682806112f1565b611251610ee3826121ef565b610e1c83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111b39250505073ffffffffffffffffffffffffffffffffffffffff84166121ef565b6111b884848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f880181900481028201810190925286815292508691508590819084018382808284375f920191909152506123b292505050565b610e1c83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506113579250505073ffffffffffffffffffffffffffffffffffffffff84166121ef565b610ebf82828080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061221992505050565b610e1c83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111b392508591506121ef9050565b7f01000000000000000000000000000000000000000000000000000000000000005f90815260208190527f82ac279db26a206d9ba5a94c07ff940aea4b3bfde8820ec95f4efa0acfd0d5bc805461191c90612962565b80601f016020809104026020016040519081016040528092919081815260200182805461194890612962565b80156119935780601f1061196a57610100808354040283529160200191611993565b820191905f5260205f20905b81548152906001019060200180831161197657829003601f168201915b5050835160208501209394505050505b60408051808201909152600481527f30786666000000000000000000000000000000000000000000000000000000006020909101527f420daffad4b177bce28bead5f76f7bc97ef63c3aae74c496db8ce6aafe9e65138114611b9b575f600183604051611a109190612acb565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836002811115611a5757611a57612926565b021790555060405180602001604052805f815250600283604051611a7b9190612acb565b90815260200160405180910390209081611a959190612cf5565b5060405180602001604052805f815250600383604051611ab59190612acb565b90815260200160405180910390209081611acf9190612cf5565b505f8181526020819052604090208054611ae890612962565b80601f0160208091040260200160405190810160405280929190818152602001828054611b1490612962565b8015611b5f5780601f10611b3657610100808354040283529160200191611b5f565b820191905f5260205f20905b815481529060010190602001808311611b4257829003601f168201915b505060408051602080820183525f8083528881529081905291909120949650611b8d93509150839050612cf5565b5050805160208201206119a3565b60408051808201909152600481527f30786666000000000000000000000000000000000000000000000000000000006020808301919091527f01000000000000000000000000000000000000000000000000000000000000005f90815290527f82ac279db26a206d9ba5a94c07ff940aea4b3bfde8820ec95f4efa0acfd0d5bc90611c269082612cf5565b507f01000000000000000000000000000000000000000000000000000000000000005f5260056020527fde001afd1f75281f9d2ab22d4e0166be5a51dd890d7492e8fbf3e412e05eac0a5460e01b5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f010000000000000000000000000000000000000000000000000000000000000014611de2577fffffffff0000000000000000000000000000000000000000000000000000000081165f81815260066020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905580518083018252838152938352600790915290208291611d379082612cf5565b5060408051602080820183525f8083527fffffffff000000000000000000000000000000000000000000000000000000008516815260089091529190912090611d809082612cf5565b507fffffffff00000000000000000000000000000000000000000000000000000000165f90815260056020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000811690915560e01b9050611c75565b7f01000000000000000000000000000000000000000000000000000000000000005f908152600560209081527fde001afd1f75281f9d2ab22d4e0166be5a51dd890d7492e8fbf3e412e05eac0a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000166301000000179055604080519182019290925201604051602081830303815290604052600b9081611e849190612cf5565b50600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555f600d819055600e805460019290611ec6908490612b59565b9091555050505050565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560408051602081019091525f8152600c906112519082612cf5565b6001808383604051611f29929190612953565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836002811115611f7057611f70612926565b021790555060405180602001604052805f81525060038383604051611f96929190612953565b90815260200160405180910390209081611fb09190612cf5565b50610ebf82828080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061213992505050565b610e1c83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061135792508591506121ef9050565b610e1c83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020810187905201915061207e9050565b6040516020818303038152906040526123b2565b5b5f60605f60c05f8060066107d05a03f1905050612093565b5f6001836040516120bc9190612acb565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600281111561210357612103612926565b0217905550806002836040516121199190612acb565b908152602001604051809103902090816121339190612cf5565b50610ebf825b80516020808301919091205f818152918290526040909120805461215c90612962565b90505f03610ebf575f60208190528181526040902061219b7f82ac279db26a206d9ba5a94c07ff940aea4b3bfde8820ec95f4efa0acfd0d5bc82612e0d565b507f01000000000000000000000000000000000000000000000000000000000000005f9081526020527f82ac279db26a206d9ba5a94c07ff940aea4b3bfde8820ec95f4efa0acfd0d5bc610e1c8382612cf5565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055600b610ebf8282612cf5565b5f805f5b60048110156122b757612265816008612f36565b84828151811061227757612277612f4d565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c9190911790806122af81612f7a565b915050612251565b5092915050565b7fffffffff000000000000000000000000000000000000000000000000000000008082165f9081526005602052604081205460e01b90911690036112515760056020527fde001afd1f75281f9d2ab22d4e0166be5a51dd890d7492e8fbf3e412e05eac0a80547fffffffff0000000000000000000000000000000000000000000000000000000083165f90815260408120805463ffffffff9093167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000009384161790557f01000000000000000000000000000000000000000000000000000000000000009052815460e084901c911617905550565b5f6123bc8361224d565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f90815260066020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055600790915290209091506124298382612cf5565b50610e1c816122be565b5f8083601f840112612443575f80fd5b50813567ffffffffffffffff81111561245a575f80fd5b602083019150836020828501011115612471575f80fd5b9250929050565b5f805f6040848603121561248a575f80fd5b833567ffffffffffffffff8111156124a0575f80fd5b6124ac86828701612433565b909790965060209590950135949350505050565b5f5b838110156124da5781810151838201526020016124c2565b50505f910152565b5f81518084526124f98160208601602086016124c0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081525f61253d60208301846124e2565b9392505050565b5f8060208385031215612555575f80fd5b823567ffffffffffffffff81111561256b575f80fd5b61257785828601612433565b90969095509350505050565b80358015158114612592575f80fd5b919050565b5f602082840312156125a7575f80fd5b61253d82612583565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f82601f8301126125ec575f80fd5b813567ffffffffffffffff80821115612607576126076125b0565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561264d5761264d6125b0565b81604052838152866020858801011115612665575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f8060408385031215612695575f80fd5b82357fffffffff00000000000000000000000000000000000000000000000000000000811681146126c4575f80fd5b9150602083013567ffffffffffffffff8111156126df575f80fd5b6126eb858286016125dd565b9150509250929050565b5f805f60408486031215612707575f80fd5b833567ffffffffffffffff81111561271d575f80fd5b61272986828701612433565b909450925061273c905060208501612583565b90509250925092565b5f805f8060408587031215612758575f80fd5b843567ffffffffffffffff8082111561276f575f80fd5b61277b88838901612433565b90965094506020870135915080821115612793575f80fd5b506127a087828801612433565b95989497509550505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611251575f80fd5b5f602082840312156127dd575f80fd5b813561253d816127ac565b5f805f80608085870312156127fb575f80fd5b8435612806816127ac565b935060208501359250604085013567ffffffffffffffff811115612828575f80fd5b612834878288016125dd565b949793965093946060013593505050565b8215158152604060208201525f61285f60408301846124e2565b949350505050565b5f805f60608486031215612879575f80fd5b8335612884816127ac565b9250602084013567ffffffffffffffff81111561289f575f80fd5b6128ab868287016125dd565b925050604084013590509250925092565b5f602082840312156128cc575f80fd5b5035919050565b5f805f604084860312156128e5575f80fd5b833567ffffffffffffffff8111156128fb575f80fd5b61290786828701612433565b909450925050602084013561291b816127ac565b809150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b818382375f9101908152919050565b600181811c9082168061297657607f821691505b6020821081036129ad577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b5f60208083525f84546129c581612962565b8084870152604060018084165f81146129e55760018114612a1d57612a48565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838a01528284151560051b8a01019550612a48565b895f52865f205f5b85811015612a405781548b8201860152908301908801612a25565b8a0184019650505b509398975050505050505050565b7fffffffff000000000000000000000000000000000000000000000000000000008416815260406020820152816040820152818360608301375f818301606090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010192915050565b5f8251612adc8184602087016124c0565b9190910192915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b838152818360208301375f910160200190815292915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b80820180821115610f9557610f95612b2c565b8281525f8251612b838160208501602087016124c0565b919091016020019392505050565b601f821115610e1c575f81815260208120601f850160051c81016020861015612bb75750805b601f850160051c820191505b81811015612bd657828155600101612bc3565b505050505050565b67ffffffffffffffff831115612bf657612bf66125b0565b612c0a83612c048354612962565b83612b91565b5f601f841160018114612c5a575f8515612c245750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556115a3565b5f838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b82811015612ca85786850135825560209485019460019092019101612c88565b5086821015612ce3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b815167ffffffffffffffff811115612d0f57612d0f6125b0565b612d2381612d1d8454612962565b84612b91565b602080601f831160018114612d75575f8415612d3f5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612bd6565b5f858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612dc157888601518255948401946001909101908401612da2565b5085821015612dfd57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b818103612e18575050565b612e228254612962565b67ffffffffffffffff811115612e3a57612e3a6125b0565b612e4881612d1d8454612962565b5f601f821160018114612e98575f8315612e625750848201545b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600385901b1c1916600184901b1784556115a3565b5f858152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08416905f86815260209020845b83811015612eee5782860154825560019586019590910190602001612ece565b5085831015612dfd579301547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f8600387901b161c19169092555050600190811b01905550565b8082028115828204841417610f9557610f95612b2c565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612faa57612faa612b2c565b506001019056fea164736f6c6343000815000a";

type MockContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockContract__factory extends ContractFactory {
  constructor(...args: MockContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _allowCallViaMock: boolean,
    _allowDelegatecallViaMock: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _allowCallViaMock,
      _allowDelegatecallViaMock,
      overrides || {}
    );
  }
  override deploy(
    _allowCallViaMock: boolean,
    _allowDelegatecallViaMock: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _allowCallViaMock,
      _allowDelegatecallViaMock,
      overrides || {}
    ) as Promise<
      MockContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockContract__factory {
    return super.connect(runner) as MockContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockContractInterface {
    return new Interface(_abi) as MockContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockContract {
    return new Contract(address, _abi, runner) as unknown as MockContract;
  }
}
