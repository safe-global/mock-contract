/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  MockContractWithCall,
  MockContractWithCallInterface,
} from "../../MockContractWithCall.sol/MockContractWithCall";
import type { NonPayableOverrides } from "../../common";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DEFAULT_FALLBACK_VALUE",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MOCKS_LIST_END",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MOCKS_LIST_END_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MOCKS_LIST_START",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SENTINEL_ANY_MOCKS",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "executeCallViaMock",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "executeDelegatecallViaMock",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "givenAnyReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "response",
        type: "address",
      },
    ],
    name: "givenAnyReturnAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "response",
        type: "bool",
      },
    ],
    name: "givenAnyReturnBool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "response",
        type: "uint256",
      },
    ],
    name: "givenAnyReturnUint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "givenAnyRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "givenAnyRevertWithMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "givenAnyRunOutOfGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "givenCalldataReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "response",
        type: "address",
      },
    ],
    name: "givenCalldataReturnAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "response",
        type: "bool",
      },
    ],
    name: "givenCalldataReturnBool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "response",
        type: "bytes32",
      },
    ],
    name: "givenCalldataReturnBytes32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "response",
        type: "uint256",
      },
    ],
    name: "givenCalldataReturnUint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "givenCalldataRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "givenCalldataRevertWithMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "givenCalldataRunOutOfGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "givenMethodReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "response",
        type: "address",
      },
    ],
    name: "givenMethodReturnAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "response",
        type: "bool",
      },
    ],
    name: "givenMethodReturnBool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "response",
        type: "bytes32",
      },
    ],
    name: "givenMethodReturnBytes32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "response",
        type: "uint256",
      },
    ],
    name: "givenMethodReturnUint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "givenMethodRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "givenMethodRevertWithMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "givenMethodRunOutOfGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "invocationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "invocationCountForCalldata",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "invocationCountForMethod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "methodId",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "originalMsgData",
        type: "bytes",
      },
    ],
    name: "updateInvocationCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x5f60a0526020608090815260c0604052600b906200001e908262000169565b503480156200002b575f80fd5b50604080518082019091526004815263183c333360e11b602080830191909152600160f81b5f90815290527f82ac279db26a206d9ba5a94c07ff940aea4b3bfde8820ec95f4efa0acfd0d5bc9062000084908262000169565b50600160f81b5f5260056020527fde001afd1f75281f9d2ab22d4e0166be5a51dd890d7492e8fbf3e412e05eac0a805463ffffffff1916630100000017905562000231565b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680620000f257607f821691505b6020821081036200011157634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000164575f81815260208120601f850160051c810160208610156200013f5750805b601f850160051c820191505b8181101562000160578281556001016200014b565b5050505b505050565b81516001600160401b03811115620001855762000185620000c9565b6200019d81620001968454620000dd565b8462000117565b602080601f831160018114620001d3575f8415620001bb5750858301515b5f19600386901b1c1916600185901b17855562000160565b5f85815260208120601f198616915b828110156200020357888601518255948401946001909101908401620001e2565b50858210156200022157878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b612eb4806200023f5f395ff3fe608060405260043610610237575f3560e01c80637dd1536311610137578063cf11ff5d116100af578063e211b8a51161007e578063f07da22911610063578063f07da229146106e7578063f5afa9c11461074b578063fa904ee01461076a57610246565b8063e211b8a5146106b4578063eb861f69146106c857610246565b8063cf11ff5d14610643578063d6fe977814610662578063d73ca0ac14610681578063d826f88f146106a057610246565b80639eaeed7511610106578063af21ac78116100eb578063af21ac78146105e6578063b3901f2914610605578063c6ee167f1461062457610246565b80639eaeed75146105a8578063aa788c55146105c757610246565b80637dd153631461051e57806387abab651461054b5780638bc80f451461056a5780639a1dc86b1461058957610246565b8063586984a4116101ca57806367aad04a1161019957806368ab6f2f1161017e57806368ab6f2f146104985780636f400756146104b75780637cd96ee4146104d657610246565b806367aad04a14610446578063682b47971461047957610246565b8063586984a4146103ca57806358cbc025146103e95780635a3855ab14610408578063619365941461042757610246565b80632ed238dc116102065780632ed238dc146102e857806336ff0ee5146103505780633956dc6b1461036f5780634937c4f6146103ab57610246565b80630a20119f1461024e5780630f91beea14610271578063122aea811461029057806321fed4d6146102c957610246565b3661024657610244610789565b005b610244610789565b348015610259575f80fd5b50600d545b6040519081526020015b60405180910390f35b34801561027c575f80fd5b5061024461028b36600461236e565b610c48565b34801561029b575f80fd5b506102bc604080515f60208201520160405160208183030381529060405281565b6040516102689190612421565b3480156102d4575f80fd5b506102446102e336600461243a565b610cac565b3480156102f3575f80fd5b5060408051808201909152600481527f307866660000000000000000000000000000000000000000000000000000000060209091015261025e7f420daffad4b177bce28bead5f76f7bc97ef63c3aae74c496db8ce6aafe9e651381565b34801561035b575f80fd5b5061024461036a36600461248d565b610d4e565b34801561037a575f80fd5b50610244600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166002179055565b3480156103b6575f80fd5b5061025e6103c536600461243a565b610d73565b3480156103d5575f80fd5b5061025e6103e436600461243a565b610e26565b3480156103f4575f80fd5b5061024461040336600461257a565b610e6d565b348015610413575f80fd5b506102446104223660046125eb565b610fe6565b348015610432575f80fd5b5061024461044136600461263b565b611049565b348015610451575f80fd5b5061025e7f010000000000000000000000000000000000000000000000000000000000000081565b348015610484575f80fd5b506102446104933660046126c3565b6110ba565b3480156104a3575f80fd5b506102446104b236600461243a565b6110df565b3480156104c2575f80fd5b506102446104d13660046125eb565b61118a565b3480156104e1575f80fd5b506102bc6040518060400160405280600481526020017f307866660000000000000000000000000000000000000000000000000000000081525081565b348015610529575f80fd5b5061053d6105383660046126de565b6111e7565b60405161026892919061273b565b348015610556575f80fd5b5061024461056536600461243a565b611260565b348015610575575f80fd5b5061053d61058436600461275d565b611298565b348015610594575f80fd5b506102446105a336600461263b565b61130c565b3480156105b3575f80fd5b506102446105c236600461263b565b6113cd565b3480156105d2575f80fd5b506102446105e136600461243a565b61149a565b3480156105f1575f80fd5b506102446106003660046127b2565b61153a565b348015610610575f80fd5b5061024461061f3660046127c9565b611546565b34801561062f575f80fd5b5061024461063e36600461263b565b61159e565b34801561064e575f80fd5b5061024461065d3660046127c9565b61160f565b34801561066d575f80fd5b5061024461067c36600461243a565b611667565b34801561068c575f80fd5b5061024461069b36600461236e565b6116a5565b3480156106ab575f80fd5b506102446116e9565b3480156106bf575f80fd5b50610244611cf3565b3480156106d3575f80fd5b506102446106e236600461243a565b611d39565b3480156106f2575f80fd5b5061071a7f010000000000000000000000000000000000000000000000000000000000000081565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610268565b348015610756575f80fd5b5061024461076536600461236e565b611e12565b348015610775575f80fd5b5061024461078436600461236e565b611e56565b7fffffffff000000000000000000000000000000000000000000000000000000005f35166107b5611eb5565b5f60025f366040516107c892919061281c565b908152602001604051809103902080546107e19061282b565b80601f016020809104026020016040519081016040528092919081815260200182805461080d9061282b565b80156108585780601f1061082f57610100808354040283529160200191610858565b820191905f5260205f20905b81548152906001019060200180831161083b57829003601f168201915b5050505050905080515f03610a2e5760017fffffffff0000000000000000000000000000000000000000000000000000000083165f9081526006602052604090205460ff1660028111156108ae576108ae61287c565b03610920577fffffffff0000000000000000000000000000000000000000000000000000000082165f908152600860205260409081902090517f08c379a000000000000000000000000000000000000000000000000000000000815261091791906004016128a9565b60405180910390fd5b60027fffffffff0000000000000000000000000000000000000000000000000000000083165f9081526006602052604090205460ff1660028111156109675761096761287c565b0361097457610974611f88565b7fffffffff0000000000000000000000000000000000000000000000000000000082165f90815260076020526040902080546109af9061282b565b80601f01602080910402602001604051908101604052809291908181526020018280546109db9061282b565b8015610a265780601f106109fd57610100808354040283529160200191610a26565b820191905f5260205f20905b815481529060010190602001808311610a0957829003601f168201915b505050505090505b80515f03610b3b576001600a5460ff166002811115610a4f57610a4f61287c565b03610a8957600c6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091791906128a9565b6002600a5460ff166002811115610aa257610aa261287c565b03610aaf57610aaf611f88565b600b8054610abc9061282b565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae89061282b565b8015610b335780601f10610b0a57610100808354040283529160200191610b33565b820191905f5260205f20905b815481529060010190602001808311610b1657829003601f168201915b505050505090505b5f3073ffffffffffffffffffffffffffffffffffffffff16620186a0845f36604051602401610b6c9392919061294c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f58cbc0250000000000000000000000000000000000000000000000000000000017905251610bed91906129c1565b5f604051808303815f8787f1925050503d805f8114610c27576040519150601f19603f3d011682016040523d82523d5f602084013e610c2c565b606091505b5091505080515f14610c4057610c406129dc565b815182602001f35b610ca783838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250506040805160208101879052019150610c939050565b604051602081830303815290604052611fa1565b505050565b600260018383604051610cc092919061281c565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836002811115610d0757610d0761287c565b0217905550610d4a82828080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061202f92505050565b5050565b5f81610d5a575f610d5d565b60015b60ff169050610d4a610d6e826120e5565b61210f565b5f80610db384848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061214392505050565b905060095f600e5483604051602001610df89291909182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6040516020818303038152906040528051906020012081526020019081526020015f20549150505b92915050565b5f60045f600e548585604051602001610e4193929190612a09565b6040516020818303038152906040528051906020012081526020019081526020015f2054905092915050565b333014610efc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f43616e206f6e6c792062652063616c6c65642066726f6d2074686520636f6e7460448201527f7261637420697473656c660000000000000000000000000000000000000000006064820152608401610917565b6001600d5f828254610f0e9190612a4f565b92505081905550600160095f600e5485604051602001610f5a9291909182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6040516020818303038152906040528051906020012081526020019081526020015f205f828254610f8b9190612a4f565b92505081905550600160045f600e5484604051602001610fac929190612a62565b6040516020818303038152906040528051906020012081526020019081526020015f205f828254610fdd9190612a4f565b90915550505050565b5f81610ff2575f610ff5565b60015b60ff16905061104384848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061103e92508591506120e59050565b611fa1565b50505050565b61104384848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f880181900481028201810190925286815292508691508590819084018382808284375f92019190915250611fa192505050565b6110dc610d6e8273ffffffffffffffffffffffffffffffffffffffff166120e5565b50565b5f61111e83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061214392505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f90815260066020526040902080549192506002917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001835b0217905550610ca7816121b4565b5f81611196575f611199565b60015b60ff16905061104384848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111e292508591506120e59050565b6122a8565b5f60608573ffffffffffffffffffffffffffffffffffffffff168584908660405161121291906129c1565b5f60405180830381858888f193505050503d805f811461124d576040519150601f19603f3d011682016040523d82523d5f602084013e611252565b606091505b509097909650945050505050565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600c610ca7828483612ad4565b5f60608473ffffffffffffffffffffffffffffffffffffffff1683856040516112c191906129c1565b5f604051808303818686f4925050503d805f81146112fa576040519150601f19603f3d011682016040523d82523d5f602084013e6112ff565b606091505b5090969095509350505050565b5f61134b85858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061214392505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f90815260066020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600890915290209091506113bc838583612ad4565b506113c6816121b4565b5050505050565b60018085856040516113e092919061281c565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018360028111156114275761142761287c565b021790555081816003868660405161144092919061281c565b9081526020016040518091039020918261145b929190612ad4565b5061104384848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061202f92505050565b5f6114d983838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061214392505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f90815260066020526040902080549192506001917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016828061117c565b6110dc610d6e826120e5565b610ca783838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061103e9250505073ffffffffffffffffffffffffffffffffffffffff84166120e5565b61104384848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f880181900481028201810190925286815292508691508590819084018382808284375f920191909152506122a892505050565b610ca783838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111e29250505073ffffffffffffffffffffffffffffffffffffffff84166120e5565b610d4a82828080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061210f92505050565b610ca783838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061103e92508591506120e59050565b7f01000000000000000000000000000000000000000000000000000000000000005f90815260208190527f82ac279db26a206d9ba5a94c07ff940aea4b3bfde8820ec95f4efa0acfd0d5bc805461173f9061282b565b80601f016020809104026020016040519081016040528092919081815260200182805461176b9061282b565b80156117b65780601f1061178d576101008083540402835291602001916117b6565b820191905f5260205f20905b81548152906001019060200180831161179957829003601f168201915b5050835160208501209394505050505b60408051808201909152600481527f30786666000000000000000000000000000000000000000000000000000000006020909101527f420daffad4b177bce28bead5f76f7bc97ef63c3aae74c496db8ce6aafe9e651381146119be575f60018360405161183391906129c1565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600281111561187a5761187a61287c565b021790555060405180602001604052805f81525060028360405161189e91906129c1565b908152602001604051809103902090816118b89190612beb565b5060405180602001604052805f8152506003836040516118d891906129c1565b908152602001604051809103902090816118f29190612beb565b505f818152602081905260409020805461190b9061282b565b80601f01602080910402602001604051908101604052809291908181526020018280546119379061282b565b80156119825780601f1061195957610100808354040283529160200191611982565b820191905f5260205f20905b81548152906001019060200180831161196557829003601f168201915b505060408051602080820183525f80835288815290819052919091209496506119b093509150839050612beb565b5050805160208201206117c6565b60408051808201909152600481527f30786666000000000000000000000000000000000000000000000000000000006020808301919091527f01000000000000000000000000000000000000000000000000000000000000005f90815290527f82ac279db26a206d9ba5a94c07ff940aea4b3bfde8820ec95f4efa0acfd0d5bc90611a499082612beb565b507f01000000000000000000000000000000000000000000000000000000000000005f5260056020527fde001afd1f75281f9d2ab22d4e0166be5a51dd890d7492e8fbf3e412e05eac0a5460e01b5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f010000000000000000000000000000000000000000000000000000000000000014611c05577fffffffff0000000000000000000000000000000000000000000000000000000081165f81815260066020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905580518083018252838152938352600790915290208291611b5a9082612beb565b5060408051602080820183525f8083527fffffffff000000000000000000000000000000000000000000000000000000008516815260089091529190912090611ba39082612beb565b507fffffffff00000000000000000000000000000000000000000000000000000000165f90815260056020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000811690915560e01b9050611a98565b7f01000000000000000000000000000000000000000000000000000000000000005f908152600560209081527fde001afd1f75281f9d2ab22d4e0166be5a51dd890d7492e8fbf3e412e05eac0a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000166301000000179055604080519182019290925201604051602081830303815290604052600b9081611ca79190612beb565b50600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555f600d819055600e805460019290611ce9908490612a4f565b9091555050505050565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560408051602081019091525f8152600c906110dc9082612beb565b6001808383604051611d4c92919061281c565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836002811115611d9357611d9361287c565b021790555060405180602001604052805f81525060038383604051611db992919061281c565b90815260200160405180910390209081611dd39190612beb565b50610d4a82828080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061202f92505050565b610ca783838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111e292508591506120e59050565b610ca783838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250506040805160208101879052019150611ea19050565b6040516020818303038152906040526122a8565b6001805f36604051611ec892919061281c565b9081526040519081900360200190205460ff166002811115611eec57611eec61287c565b03611f415760035f36604051611f0392919061281c565b9081526040519081900360200181207f08c379a0000000000000000000000000000000000000000000000000000000008252610917916004016128a9565b600260015f36604051611f5592919061281c565b9081526040519081900360200190205460ff166002811115611f7957611f7961287c565b03611f8657611f86611f88565b565b5b5f60605f60c05f8060066107d05a03f1905050611f89565b5f600183604051611fb291906129c1565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836002811115611ff957611ff961287c565b02179055508060028360405161200f91906129c1565b908152602001604051809103902090816120299190612beb565b50610d4a825b80516020808301919091205f81815291829052604090912080546120529061282b565b90505f03610d4a575f6020819052818152604090206120917f82ac279db26a206d9ba5a94c07ff940aea4b3bfde8820ec95f4efa0acfd0d5bc82612d03565b507f01000000000000000000000000000000000000000000000000000000000000005f9081526020527f82ac279db26a206d9ba5a94c07ff940aea4b3bfde8820ec95f4efa0acfd0d5bc610ca78382612beb565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055600b610d4a8282612beb565b5f805f5b60048110156121ad5761215b816008612e2c565b84828151811061216d5761216d612e43565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c9190911790806121a581612e70565b915050612147565b5092915050565b7fffffffff000000000000000000000000000000000000000000000000000000008082165f9081526005602052604081205460e01b90911690036110dc5760056020527fde001afd1f75281f9d2ab22d4e0166be5a51dd890d7492e8fbf3e412e05eac0a80547fffffffff0000000000000000000000000000000000000000000000000000000083165f90815260408120805463ffffffff9093167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000009384161790557f01000000000000000000000000000000000000000000000000000000000000009052815460e084901c911617905550565b5f6122b283612143565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f90815260066020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556007909152902090915061231f8382612beb565b50610ca7816121b4565b5f8083601f840112612339575f80fd5b50813567ffffffffffffffff811115612350575f80fd5b602083019150836020828501011115612367575f80fd5b9250929050565b5f805f60408486031215612380575f80fd5b833567ffffffffffffffff811115612396575f80fd5b6123a286828701612329565b909790965060209590950135949350505050565b5f5b838110156123d05781810151838201526020016123b8565b50505f910152565b5f81518084526123ef8160208601602086016123b6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081525f61243360208301846123d8565b9392505050565b5f806020838503121561244b575f80fd5b823567ffffffffffffffff811115612461575f80fd5b61246d85828601612329565b90969095509350505050565b80358015158114612488575f80fd5b919050565b5f6020828403121561249d575f80fd5b61243382612479565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f82601f8301126124e2575f80fd5b813567ffffffffffffffff808211156124fd576124fd6124a6565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715612543576125436124a6565b8160405283815286602085880101111561255b575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f806040838503121561258b575f80fd5b82357fffffffff00000000000000000000000000000000000000000000000000000000811681146125ba575f80fd5b9150602083013567ffffffffffffffff8111156125d5575f80fd5b6125e1858286016124d3565b9150509250929050565b5f805f604084860312156125fd575f80fd5b833567ffffffffffffffff811115612613575f80fd5b61261f86828701612329565b9094509250612632905060208501612479565b90509250925092565b5f805f806040858703121561264e575f80fd5b843567ffffffffffffffff80821115612665575f80fd5b61267188838901612329565b90965094506020870135915080821115612689575f80fd5b5061269687828801612329565b95989497509550505050565b73ffffffffffffffffffffffffffffffffffffffff811681146110dc575f80fd5b5f602082840312156126d3575f80fd5b8135612433816126a2565b5f805f80608085870312156126f1575f80fd5b84356126fc816126a2565b935060208501359250604085013567ffffffffffffffff81111561271e575f80fd5b61272a878288016124d3565b949793965093946060013593505050565b8215158152604060208201525f61275560408301846123d8565b949350505050565b5f805f6060848603121561276f575f80fd5b833561277a816126a2565b9250602084013567ffffffffffffffff811115612795575f80fd5b6127a1868287016124d3565b925050604084013590509250925092565b5f602082840312156127c2575f80fd5b5035919050565b5f805f604084860312156127db575f80fd5b833567ffffffffffffffff8111156127f1575f80fd5b6127fd86828701612329565b9094509250506020840135612811816126a2565b809150509250925092565b818382375f9101908152919050565b600181811c9082168061283f57607f821691505b602082108103612876577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f60208083525f84546128bb8161282b565b8084870152604060018084165f81146128db57600181146129135761293e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838a01528284151560051b8a0101955061293e565b895f52865f205f5b858110156129365781548b820186015290830190880161291b565b8a0184019650505b509398975050505050505050565b7fffffffff000000000000000000000000000000000000000000000000000000008416815260406020820152816040820152818360608301375f818301606090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010192915050565b5f82516129d28184602087016123b6565b9190910192915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b838152818360208301375f910160200190815292915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b80820180821115610e2057610e20612a22565b8281525f8251612a798160208501602087016123b6565b919091016020019392505050565b601f821115610ca7575f81815260208120601f850160051c81016020861015612aad5750805b601f850160051c820191505b81811015612acc57828155600101612ab9565b505050505050565b67ffffffffffffffff831115612aec57612aec6124a6565b612b0083612afa835461282b565b83612a87565b5f601f841160018114612b50575f8515612b1a5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556113c6565b5f838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b82811015612b9e5786850135825560209485019460019092019101612b7e565b5086821015612bd9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b815167ffffffffffffffff811115612c0557612c056124a6565b612c1981612c13845461282b565b84612a87565b602080601f831160018114612c6b575f8415612c355750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612acc565b5f858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612cb757888601518255948401946001909101908401612c98565b5085821015612cf357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b818103612d0e575050565b612d18825461282b565b67ffffffffffffffff811115612d3057612d306124a6565b612d3e81612c13845461282b565b5f601f821160018114612d8e575f8315612d585750848201545b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600385901b1c1916600184901b1784556113c6565b5f858152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08416905f86815260209020845b83811015612de45782860154825560019586019590910190602001612dc4565b5085831015612cf3579301547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f8600387901b161c19169092555050600190811b01905550565b8082028115828204841417610e2057610e20612a22565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ea057612ea0612a22565b506001019056fea164736f6c6343000815000a";

type MockContractWithCallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockContractWithCallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockContractWithCall__factory extends ContractFactory {
  constructor(...args: MockContractWithCallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockContractWithCall & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockContractWithCall__factory {
    return super.connect(runner) as MockContractWithCall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockContractWithCallInterface {
    return new Interface(_abi) as MockContractWithCallInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockContractWithCall {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockContractWithCall;
  }
}
